/*** 
*
* Most of the logic for task lists are done here
*
*/


if(typeof exports == 'undefined'){
  	var exports = this['mymodule'] = {};
}

/*** Add button to the editbar and bind a listener ***/
exports.add_buttons = {

	// Write the button to the dom
	init: function(){ 

		// make a sidebar with the button
		var buttonHTML = '<div id="sidebar"><div id="sidebarInner"><button class="acl-write" id="analyseButton"><a class="grouped-right" data-l10n-id="pad.toolbar.add_buttons.title" title="Task list Checkbox"><span class="buttonicon buttonicon-add_buttons"></span> Analyseer Tekst</a></button></div></div>';

		// append the sidebar and button to the pad content
		$('#editorcontainerbox').append(buttonHTML);

		// add an on click action to the button
		$('#analyseButton').click(function(){
			exports.add_buttons.onButton();
		});

	},	
	
	// execute this action on click	
	onButton: function(){ 
		
		console.log("Push my button baby");
		
		// Get the current url with the download link appended. Change txt to html or etherpad for other formats
		var fullUrl = window.location.href + "/export/txt" ;		
		
		
		// Make an ajax call to the link to get the current pad content
		jQuery.get(fullUrl, function(data) {
            var textContent = data;
			console.log("Content is:");
			console.log(data);
			
			splitParagraphs(data);
        });		
	},
	
}

// split the paragraphs, and return them in an array. 
function splitParagraphs(data) {
	// defined as a double newline
	data = data.split(/\n\n/);
	
	// IE support for filter is from IE9 on
	data = data.filter(function(e){ return e.replace(/(\r\n|\n|\r)/gm,"")});
	console.log(data);
}




exports.postAceInit = function(hook, context){ 
	exports.add_buttons.init();
}
