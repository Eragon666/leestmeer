try {
	var autobahn = require('autobahn');
} catch (e) {
	// when running in browser, AutobahnJS will
	// be included without a module system
}

var url = 'localhost';

var connection = new autobahn.Connection({
	url: 'ws://' + url + ':8080/ws',
	realm: 'analyze'}
);


connection.onopen = function (sessionLocal) {
	console.log("Connection opened!");
};


/*
 * Start the connection
 */
function startConnection() {
/* 	var session = connection.session;
	console.log('Connection open: ' + connection.isOpen);
	console.log('Connection connected: ' + connection.isConnected);
	console.log('Session open: ' + session.isOpen);
	if (!connection.isOpen) {
		console.log('Hi there!');
		connection.open();
	} else {
		console.log('Already opened');
	} */
	
	connection.open();
}


/*
 * Stop the connection
 */
function stopConnection() {
	connection.close();
}


/*
 * Send analyze request to the server
 */
function sendAnalyzeRequest(message, callback) {
	var jsonmessage = JSON.stringify(message);
	
	var session = connection.session;
	
	session.call('com.analyze.async', [jsonmessage]).then(
		function (resp) {
			console.log("Response:", resp);
			//connection.close();
			
			callback(JSON.parse(resp));
		},
		function (error) {
			console.log("Call failed:", error);
			//connection.close();
			callback(false);
		}
	);
}

//test();


/*
 * Debug function
 */
function test() {

	startConnection();

	setTimeout(function() {
		console.log('Sending stuff');

		var message = 
		{
			info: { 
				id: 1,
				name: 'My first etherpad'
			},
			overall: [{
				aviScore: '?',
				analytics: {
					words: 1300,
					paragraphs: 5
				}
			}],
			text: [{
				paragraph: 'Lorem ipsum dolor sit amet',
				aviScore: '?',
				analytics: {
					words: 500,
					avgSentence: 5
				},
				changed: true
			},
			{
				paragraph: 'Second Lorem ipsum dolor sit amet',
				aviscore: 40,
				analytics: {
					words: 800,
					avgSentence: 5
				},
				changed: false
			}]
		};

		if (connection.isConnected) {
			sendAnalyzeRequest(message);
		}
	}, 1500);
}
